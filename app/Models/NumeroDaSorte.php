<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class NumeroDaSorte extends Model
{
    use HasFactory;

    /**
     * Nome da tabela (caso nÃ£o siga o padrÃ£o)
     */
    protected $table = 'numeros_da_sorte';

    /**
     * Campos que podem ser preenchidos em massa
     */
    protected $fillable = [
        'user_id',
        'sorteio_id',
        'numero',
        'ativo',
        'premiado',
        'gerado_em',
		'posicao', // ðŸ‘ˆ ADICIONE ESTA LINHA
    ];

    /**
     * ConversÃ£o de tipos de atributos
     */
    protected $casts = [
        'ativo' => 'boolean',
        'premiado' => 'boolean',
        'gerado_em' => 'datetime',
    ];

    /**
     * Relacionamento: nÃºmero pertence a um usuÃ¡rio
     */
    public function usuario()
    {
        return $this->belongsTo(User::class, 'user_id');
    }

    /**
     * Relacionamento: nÃºmero pertence a um sorteio
     */
    public function sorteio()
    {
        return $this->belongsTo(Sorteio::class);
    }

    /**
     * Accessor: retorna nÃºmero formatado, exemplo 123-456-7
     */
    public function getNumeroFormatadoAttribute()
    {
        return chunk_split($this->numero, 3, '-');
    }

    /**
     * Scope: retorna apenas nÃºmeros ativos, vinculados e vÃ¡lidos
     */
    public function scopeAtivos($query)
    {
        return $query->where('ativo', true)
                     ->whereNotNull('numero')
                     ->whereNotNull('user_id');
    }

    /**
     * Scope: retorna apenas nÃºmeros premiados
     */
    public function scopePremiados($query)
    {
        return $query->where('premiado', true);
    }
}
